# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: [v*]

env:
  PACT_BROKER_BASE_URL: 'https://test.pactflow.io'
  PACT_BROKER_USERNAME: dXfltyFMgNOFZAxr8io9wJ37iUpY42M
  PACT_BROKER_PASSWORD: O5AIZWxelWbLvqMd8PkAVycBJh2Psyg1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-2019]
        scala: [3.5.0]
        java: [zulu@17, zulu@20]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        shell: bash
        run: git config --global core.autocrlf false

      - name: Configure pagefile for Windows
        if: contains(runner.os, 'windows')
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 2GB
          maximum-size: 8GB
          disk-root: 'C:'

      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (zulu@17)
        if: matrix.java == 'zulu@17'
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
          cache: sbt

      - name: Setup Java (zulu@20)
        if: matrix.java == 'zulu@20'
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 20
          cache: sbt

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Check that workflows are up to date
        shell: bash
        run: sbt '++ ${{ matrix.scala }}' githubWorkflowCheck

      - name: Set outputs
        id: vars
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "git_tag=$(git describe --tags)" >> $GITHUB_OUTPUT

      - name: Pactflow Setup
        uses: pactflow/actions@main

      - name: Build project
        shell: bash
        run: sbt '++ ${{ matrix.scala }}' compile scalafmtCheckAll javafmtCheckAll plugin/test

      - name: Test Consumer
        shell: bash
        run: sbt '++ ${{ matrix.scala }}' consumer/test

      - name: Pact publish Windows
        if: contains(runner.os, 'windows')
        shell: bash
        run: pact-broker.bat publish "modules/examples/consumer/target/pacts" --consumer-app-version=${{ steps.vars.outputs.git_tag }}-${{ runner.os }} --tag=${{ steps.vars.outputs.git_tag }}-${{ runner.os }} 

      - name: Pact publish *nix
        if: '!contains(runner.os, ''windows'')'
        shell: bash
        run: pact-broker publish "modules/examples/consumer/target/pacts" --consumer-app-version=${{ steps.vars.outputs.git_tag }}-${{ runner.os }} --tag=${{ steps.vars.outputs.git_tag }}-${{ runner.os }} 

      - name: Test Provider
        env:
          PACT_BROKER_TAG: ${{ steps.vars.outputs.git_tag }}-${{ runner.os }}
        shell: bash
        run: sbt '++ ${{ matrix.scala }}' provider/test

      - name: Compress target directories
        shell: bash
        run: tar cf targets.tar target modules/plugin/target modules/examples/provider/target modules/examples/consumer/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v'))
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [3.5.0]
        java: [zulu@17]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        run: git config --global core.autocrlf false

      - name: Configure pagefile for Windows
        if: contains(runner.os, 'windows')
        uses: al-cheb/configure-pagefile-action@v1.4
        with:
          minimum-size: 2GB
          maximum-size: 8GB
          disk-root: 'C:'

      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (zulu@17)
        if: matrix.java == 'zulu@17'
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
          cache: sbt

      - name: Setup Java (zulu@20)
        if: matrix.java == 'zulu@20'
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 20
          cache: sbt

      - name: Setup sbt
        uses: sbt/setup-sbt@v1

      - name: Download target directories (3.5.0)
        uses: actions/download-artifact@v4
        with:
          name: target-${{ matrix.os }}-3.5.0-${{ matrix.java }}

      - name: Inflate target directories (3.5.0)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Doc - Install node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Doc - Install dependencies
        run: npm ci

      - name: Doc - build
        run: ./scripts/docBuild.sh ${{ github.ref }}

      - name: Build package
        run: 'sbt universal:packageZipTarball'

      - name: Prepare Artifacts
        run: ./scripts/prepArtifacts.sh

      - name: Upload Release Assets
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/artifacts/*
          file_glob: true
          tag: ${{ github.ref }}

      - name: Publish docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sbt publishToGitHubPages
